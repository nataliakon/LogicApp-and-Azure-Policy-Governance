{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "logicAppName": {
        "type": "string",
        "defaultValue": "Remediate-Route-Table",
        "metadata": {
          "description": "Name of the Logic App."
        }
      },
      "logicAppLocation": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "allowedValues": [
          "[resourceGroup().location]",
          "eastasia",
          "southeastasia",
          "centralus",
          "eastus",
          "eastus2",
          "westus",
          "northcentralus",
          "southcentralus",
          "northeurope",
          "westeurope",
          "japanwest",
          "japaneast",
          "brazilsouth",
          "australiaeast",
          "australiasoutheast",
          "westcentralus",
          "westus2"
        ],
        "metadata": {
          "description": "Location of the Logic App."
        }
      },
      "arm-1_name": {
        "type": "string",
        "defaultValue": "arm-1"
      },
      "arm-1_displayName": {
        "type": "string",
        "defaultValue": "routetableremediation"
      },
      "arm-1_token:clientId": {
        "type": "string",
        "defaultValue": null,
        "metadata": {
          "description": "Client (or Application) ID of the Azure Active Directory application."
        }
      },
      "arm-1_token:clientSecret": {
        "type": "securestring",
        "defaultValue": null,
        "metadata": {
          "description": "Client secret of the Azure Active Directory application."
        }
      },
      "arm-1_token:TenantId": {
        "type": "string",
        "defaultValue": null,
        "metadata": {
          "description": "The tenant ID of for the Azure Active Directory application"
        }
      },
      "arm-1_token:resourceUri": {
        "type": "string",
        "defaultValue": null,
        "metadata": {
          "description": "The resource you are requesting authorization to use."
        }
      },
      "arm-1_token:grantType": {
        "type": "string",
        "defaultValue": null,
        "allowedValues": [
          "code",
          "client_credentials"
        ],
        "metadata": {
          "description": "Grant type"
        }
      },
      "ascassessment_name": {
        "type": "string",
        "defaultValue": "ascassessment"
      },
      "ascassessment_displayName": {
        "type": "string",
        "defaultValue": "Security Center Recommendation"
      }
    },
    "variables": {},
    "resources": [
      {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2016-06-01",
        "name": "[parameters('logicAppName')]",
        "location": "[parameters('logicAppLocation')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/connections', parameters('arm-1_name'))]",
          "[resourceId('Microsoft.Web/connections', parameters('ascassessment_name'))]"
        ],
        "properties": {
          "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "$connections": {
                "defaultValue": {},
                "type": "Object"
              }
            },
            "triggers": {
              "When_an_Azure_Security_Center_Recommendation_is_created_or_triggered": {
                "type": "ApiConnectionWebhook",
                "inputs": {
                  "body": {
                    "callback_url": "@{listCallbackUrl()}"
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['ascassessment']['connectionId']"
                    }
                  },
                  "path": "/Microsoft.Security/Assessment/subscribe"
                }
              }
            },
            "actions": {
              "Initial_variable_for_nsgID": {
                "runAfter": {
                  "Parse_JSON_-_subnet_properties": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "nsgid",
                      "type": "string",
                      "value": "@{if(equals(body('Parse_JSON_-_subnet_properties')?['networkSecurityGroup'],null),variables('baseNSGID'),body('Parse_JSON_-_subnet_properties')?['networkSecurityGroup']?['id'])}"
                    }
                  ]
                }
              },
              "Initialize_variable_RouteID": {
                "runAfter": {
                  "Initialize_variable_VnetName": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "RouteID",
                      "type": "string"
                    }
                  ]
                }
              },
              "Initialize_variable_SubnetID": {
                "runAfter": {},
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "subnetID",
                      "type": "string",
                      "value": "@triggerBody()?['properties']?['resourceDetails']?['id']"
                    }
                  ]
                }
              },
              "Initialize_variable_SubnetName": {
                "runAfter": {
                  "Initialize_variable_SubnetID": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "SubnetName",
                      "type": "string",
                      "value": "@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[10]}"
                    }
                  ]
                }
              },
              "Initialize_variable_VnetName": {
                "runAfter": {
                  "Initialize_variable_SubnetName": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "VnetName",
                      "type": "string",
                      "value": "@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[8]}"
                    }
                  ]
                }
              },
              "Initialize_variable_baseNSGID": {
                "runAfter": {
                  "Initialize_variable_RouteID": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "baseNSGID",
                      "type": "string"
                    }
                  ]
                }
              },
              "Parse_JSON_-_subnet_properties": {
                "runAfter": {
                  "Read_a_resource_-_subnet_properties": [
                    "Succeeded"
                  ]
                },
                "type": "ParseJson",
                "inputs": {
                  "content": "@body('Read_a_resource_-_subnet_properties')?['properties']",
                  "schema": {
                    "properties": {
                      "addressPrefix": {
                        "type": "string"
                      },
                      "applicationGatewayIPConfigurations": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "delegations": {
                        "type": "array"
                      },
                      "ipConfigurations": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "networkSecurityGroup": {
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "privateEndpointNetworkPolicies": {
                        "type": "string"
                      },
                      "privateLinkServiceNetworkPolicies": {
                        "type": "string"
                      },
                      "provisioningState": {
                        "type": "string"
                      },
                      "serviceEndpoints": {
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "Read_a_resource_-_Vnet._To_determine_the_RouteID_and_NSGID": {
                "runAfter": {
                  "Initialize_variable_baseNSGID": [
                    "Succeeded"
                  ]
                },
                "type": "ApiConnection",
                "inputs": {
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['arm']['connectionId']"
                    }
                  },
                  "method": "get",
                  "path": "/subscriptions/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Network')}/@{encodeURIComponent('virtualNetworks/',variables('VnetName'))}",
                  "queries": {
                    "x-ms-api-version": "2020-07-01"
                  }
                }
              },
              "Read_a_resource_-_subnet_properties": {
                "runAfter": {
                  "Set_the_RouteID_and_baseNSGID_based_on_the_location": [
                    "Succeeded"
                  ]
                },
                "type": "ApiConnection",
                "inputs": {
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['arm']['connectionId']"
                    }
                  },
                  "method": "get",
                  "path": "/subscriptions/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[4])}/providers/@{encodeURIComponent('Microsoft.Network/virtualNetworks')}/@{encodeURIComponent(variables('VnetName'),'/subnets/',variables('SubnetName'))}",
                  "queries": {
                    "x-ms-api-version": "2020-07-01"
                  }
                }
              },
              "Set_the_RouteID_and_baseNSGID_based_on_the_location": {
                "runAfter": {
                  "Read_a_resource_-_Vnet._To_determine_the_RouteID_and_NSGID": [
                    "Succeeded"
                  ]
                },
                "cases": {
                  "Canada_Central": {
                    "case": "canadacentral",
                    "actions": {
                      "Set_variable_Route_ID_for_CACN": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "RouteID",
                          "value": "/subscriptions/a127444e-1844-4c1e-a359-c9ba98cf5160/resourceGroups/Azureminilab-VNET/providers/Microsoft.Network/routeTables/azurefirewallcac"
                        }
                      },
                      "Set_variable_baseNSGID_for_CACN": {
                        "runAfter": {
                          "Set_variable_Route_ID_for_CACN": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "baseNSGID",
                          "value": "/subscriptions/a127444e-1844-4c1e-a359-c9ba98cf5160/resourceGroups/Azureminilab-VNET/providers/Microsoft.Network/networkSecurityGroups/Azureminilab-NSG-DCs"
                        }
                      }
                    }
                  },
                  "Canada_East": {
                    "case": "canadaeast",
                    "actions": {
                      "Set_variable_RouteID_for_CAE": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "RouteID",
                          "value": "/subscriptions/a127444e-1844-4c1e-a359-c9ba98cf5160/resourceGroups/Azureminilab-vWAN-NK/providers/Microsoft.Network/routeTables/DEV-CACN-RouteTable-PR01"
                        }
                      },
                      "Set_variable_baseNSGID_for_CAE": {
                        "runAfter": {
                          "Set_variable_RouteID_for_CAE": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable",
                        "inputs": {
                          "name": "baseNSGID",
                          "value": "/subscriptions/a127444e-1844-4c1e-a359-c9ba98cf5160/resourceGroups/Azureminilab-VNET/providers/Microsoft.Network/networkSecurityGroups/Azureminilab-NSG-DCs"
                        }
                      }
                    }
                  }
                },
                "default": {
                  "actions": {}
                },
                "expression": "@body('Read_a_resource_-_Vnet._To_determine_the_RouteID_and_NSGID')?['location']",
                "type": "Switch"
              },
              "Update_the_route_table_on_the_subnet": {
                "runAfter": {
                  "Initial_variable_for_nsgID": [
                    "Succeeded"
                  ]
                },
                "type": "ApiConnection",
                "inputs": {
                  "body": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "resources": [
                          {
                            "apiVersion": "2020-07-01",
                            "name": "[[concat('@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[8]}','/','@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[10]}')]",
                            "properties": {
                              "addressPrefix": "@{body('Parse_JSON_-_subnet_properties')?['addressPrefix']}",
                              "networkSecurityGroup": {
                                "id": "@variables('nsgid')"
                              },
                              "routeTable": {
                                "id": "@{variables('RouteID')}"
                              }
                            },
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      }
                    }
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['arm']['connectionId']"
                    }
                  },
                  "method": "put",
                  "path": "/subscriptions/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[2])}/resourcegroups/@{encodeURIComponent(split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[4])}/providers/Microsoft.Resources/deployments/@{encodeURIComponent('Update-Route-Table')}",
                  "queries": {
                    "wait": true,
                    "x-ms-api-version": "2016-06-01"
                  }
                }
              }
            },
            "outputs": {}
          },
          "parameters": {
            "$connections": {
              "value": {
                "arm": {
                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/arm')]",
                  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('arm-1_name'))]",
                  "connectionName": "[parameters('arm-1_name')]"
                },
                "ascassessment": {
                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/ascassessment')]",
                  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('ascassessment_name'))]",
                  "connectionName": "[parameters('ascassessment_name')]"
                }
              }
            }
          }
        },
        "identity": {
          "type": "SystemAssigned"
        }
      },
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "location": "[parameters('logicAppLocation')]",
        "name": "[parameters('ascassessment_name')]",
        "properties": {
          "api": {
            "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/ascassessment')]"
          },
          "displayName": "[parameters('ascassessment_displayName')]"
        }
      },
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "location": "[parameters('logicAppLocation')]",
        "name": "[parameters('arm-1_name')]",
        "properties": {
          "api": {
            "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/arm')]"
          },
          "displayName": "[parameters('arm-1_displayName')]",
          "parameterValues": {
            "token:clientId": "[parameters('arm-1_token:clientId')]",
            "token:clientSecret": "[parameters('arm-1_token:clientSecret')]",
            "token:TenantId": "[parameters('arm-1_token:TenantId')]",
            "token:resourceUri": "[parameters('arm-1_token:resourceUri')]",
            "token:grantType": "[parameters('arm-1_token:grantType')]"
          }
        }
      }
    ],
    "outputs": {}
  }
  